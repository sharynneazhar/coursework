==40368== Memcheck, a memory error detector
==40368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==40368== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==40368== Command: /home/sazhar/coursework/eecs678/project1-quash/quash
==40368== 
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
==40533== 
==40533== Process terminating with default action of signal 13 (SIGPIPE)
==40533==    at 0x4F2B210: __write_nocancel (in /usr/lib64/libc-2.23.so)
==40533==    by 0x4EAEC1E: _IO_file_write@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40533==    by 0x4EB0378: _IO_do_write@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40533==    by 0x4EAE40F: _IO_file_sync@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40533==    by 0x4EA39BB: fflush (in /usr/lib64/libc-2.23.so)
==40533==    by 0x4039A5: run_pwd (execute.c:232)
==40533==    by 0x403A4A: child_run_command (execute.c:272)
==40533==    by 0x403C94: create_process (execute.c:391)
==40533==    by 0x403E38: run_script (execute.c:425)
==40533==    by 0x40148D: main (quash.c:132)
==40533== 
==40533== HEAP SUMMARY:
==40533==     in use at exit: 17,750 bytes in 7 blocks
==40533==   total heap usage: 12 allocs, 5 frees, 1,071,766 bytes allocated
==40533== 
==40533== LEAK SUMMARY:
==40533==    definitely lost: 0 bytes in 0 blocks
==40533==    indirectly lost: 0 bytes in 0 blocks
==40533==      possibly lost: 0 bytes in 0 blocks
==40533==    still reachable: 17,750 bytes in 7 blocks
==40533==         suppressed: 0 bytes in 0 blocks
==40533== Reachable blocks (those to which a pointer was found) are not shown.
==40533== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==40533== 
==40533== For counts of detected and suppressed errors, rerun with: -v
==40533== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
==40584== 
==40584== HEAP SUMMARY:
==40584==     in use at exit: 20 bytes in 2 blocks
==40584==   total heap usage: 19 allocs, 17 frees, 2,117,634 bytes allocated
==40584== 
==40584== LEAK SUMMARY:
==40584==    definitely lost: 0 bytes in 0 blocks
==40584==    indirectly lost: 0 bytes in 0 blocks
==40584==      possibly lost: 0 bytes in 0 blocks
==40584==    still reachable: 20 bytes in 2 blocks
==40584==         suppressed: 0 bytes in 0 blocks
==40584== Reachable blocks (those to which a pointer was found) are not shown.
==40584== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==40584== 
==40584== For counts of detected and suppressed errors, rerun with: -v
==40584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
==40654== 
==40654== Process terminating with default action of signal 13 (SIGPIPE)
==40654==    at 0x4F2B210: __write_nocancel (in /usr/lib64/libc-2.23.so)
==40654==    by 0x4EAEC1E: _IO_file_write@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40654==    by 0x4EB0378: _IO_do_write@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40654==    by 0x4EAE40F: _IO_file_sync@@GLIBC_2.2.5 (in /usr/lib64/libc-2.23.so)
==40654==    by 0x4EA39BB: fflush (in /usr/lib64/libc-2.23.so)
==40654==    by 0x403858: run_echo (execute.c:163)
==40654==    by 0x403A3E: child_run_command (execute.c:268)
==40654==    by 0x403C94: create_process (execute.c:391)
==40654==    by 0x403E38: run_script (execute.c:425)
==40654==    by 0x40148D: main (quash.c:132)
printf: missing operand
Try 'printf --help' for more information.
==40654== 
==40654== HEAP SUMMARY:
==40654==     in use at exit: 17,750 bytes in 7 blocks
==40654==   total heap usage: 37 allocs, 30 frees, 1,080,490 bytes allocated
==40654== 
==40654== LEAK SUMMARY:
==40654==    definitely lost: 0 bytes in 0 blocks
==40654==    indirectly lost: 0 bytes in 0 blocks
==40654==      possibly lost: 0 bytes in 0 blocks
==40654==    still reachable: 17,750 bytes in 7 blocks
==40654==         suppressed: 0 bytes in 0 blocks
==40654== Reachable blocks (those to which a pointer was found) are not shown.
==40654== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==40654== 
==40654== For counts of detected and suppressed errors, rerun with: -v
==40654== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
==40688== 
==40688== HEAP SUMMARY:
==40688==     in use at exit: 20 bytes in 2 blocks
==40688==   total heap usage: 44 allocs, 42 frees, 2,126,358 bytes allocated
==40688== 
==40688== LEAK SUMMARY:
==40688==    definitely lost: 0 bytes in 0 blocks
==40688==    indirectly lost: 0 bytes in 0 blocks
==40688==      possibly lost: 0 bytes in 0 blocks
==40688==    still reachable: 20 bytes in 2 blocks
==40688==         suppressed: 0 bytes in 0 blocks
==40688== Reachable blocks (those to which a pointer was found) are not shown.
==40688== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==40688== 
==40688== For counts of detected and suppressed errors, rerun with: -v
==40688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
IMPLEMENT ME: src/execute.c(line 108): check_jobs_bg_status()
==40368== 
==40368== HEAP SUMMARY:
==40368==     in use at exit: 0 bytes in 0 blocks
==40368==   total heap usage: 50 allocs, 50 frees, 1,079,162 bytes allocated
==40368== 
==40368== All heap blocks were freed -- no leaks are possible
==40368== 
==40368== For counts of detected and suppressed errors, rerun with: -v
==40368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
